create TABLE IF NOT EXISTS mpa (
id BIGINT GENERATED BY DEFAULT  AS IDENTITY PRIMARY KEY,
name VARCHAR(40) NOT NULL
);

create TABLE IF NOT EXISTS genres (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(50) NOT NULL
);

create TABLE IF NOT EXISTS users (
id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
email VARCHAR(255) NOT NULL,
login VARCHAR(40) NOT NULL,
name VARCHAR(40) NULL,
birthday DATE NOT NULL
);

create TABLE IF NOT EXISTS films (
id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
name VARCHAR(40) NOT NULL,
description  VARCHAR(255) NOT NULL,
release_date DATE NOT NULL,
duration INT NOT NULL,
mpa_id BIGINT REFERENCES mpa (id) ON delete RESTRICT
);

create TABLE IF NOT EXISTS likes (
user_id BIGINT NOT NULL REFERENCES users (id) ON delete CASCADE,
film_id BIGINT NOT NULL REFERENCES films (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS friends (
user_id BIGINT NOT NULL REFERENCES users (id) ON delete CASCADE,
friend_id BIGINT NOT NULL REFERENCES users (id) ON delete CASCADE,
status boolean NOT NULL DEFAULT FALSE,
PRIMARY KEY (user_id, friend_id)
);

create TABLE IF NOT EXISTS films_genres (
film_id  BIGINT REFERENCES films (id) ON delete CASCADE,
genre_id BIGINT NOT NULL REFERENCES genres (id) ON delete RESTRICT
);

create TABLE IF NOT EXISTS reviews (
id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
content VARCHAR(255) NOT NULL,
is_positive boolean NOT NULL,
user_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
film_id  BIGINT NOT NULL REFERENCES films (id) ON DELETE CASCADE,
useful INT DEFAULT 0
);

create TABLE IF NOT EXISTS reviews_likes (
user_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
review_id BIGINT NOT NULL REFERENCES reviews (id) ON DELETE CASCADE,
is_like boolean NOT NULL DEFAULT FALSE,
PRIMARY KEY (user_id, review_id)
);

create TABLE IF NOT EXISTS directors
(
id   BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
name varchar(50) NOT NULL
);

create TABLE IF NOT EXISTS films_directors
(
film_id     BIGINT REFERENCES films (id) ON delete CASCADE,
director_id BIGINT NOT NULL REFERENCES directors (id) ON delete RESTRICT
);